<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.api.db.dao.TbRoleDao">
    <select id="searchAllRole" resultType="HashMap">
        SELECT id,
               role_name AS roleName
        FROM tb_role ORDER BY id
    </select>
    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT
            id,
            role_name AS roleName,
            permissions,
            `desc`,
            default_permissions AS defaultPermissions
        FROM tb_role
        WHERE id = #{id}
    </select>
    <select id="searchRoleByPage" parameterType="HashMap" resultType="HashMap">
        select
        r.id,
        r.role_name as roleName,
        count(u.id) as users,
        JSON_LENGTH( r.permissions ) as permissions,
        r.`desc`,
        r.systemic
        from tb_role as r
        left join tb_user as u
            on JSON_CONTAINS(u.role, CONVERT(r.id, CHAR))
        where 1 = 1
        <if test="roleName!=null">
            and r.role_name like '%${roleName}%'
        </if>
        group by r.id
        order by r.id
        LIMIT #{start}, #{length}
    </select>
    <select id="searchRoleCount" parameterType="HashMap" resultType="long">
        SELECT COUNT(*) FROM (
        SELECT r.id
        FROM tb_role r
        LEFT JOIN tb_user u ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
        WHERE 1=1
        <if test="roleName!=null">
            AND r.role_name LIKE '%${roleName}%'
        </if>
        GROUP BY r.id
        ) AS temp
    </select>
    <insert id="insert" parameterType="com.example.emos.api.db.pojo.TbRole">
        insert into tb_role
        set role_name = #{roleName},
        permissions = #{permissions}
        <if test="desc=!null">
            ,`desc`=#{desc}
        </if>
    </insert>
    <select id="searchUserIdByRoleId" parameterType="int" resultType="int">
        select u.id
        from tb_role as r
        join tb_user as u
            on JSON_CONTAINS(u.role, CONVERT(r.id, CHAR))
        where r.id = #{id}
    </select>
    <update id="update" parameterType="com.example.emos.api.db.pojo.TbRole">
        update tb_role
        set role_name = #{roleName},
        `desc`= #{desc},
        permissions=#{permissions}
        where id = #{id} and id!=0
    </update>
    <select id="searchCanDelete" resultType="boolean">
        select if(sum(temp.users) > 0 , FALSE, TRUE) as result from (
            SELECT COUNT( u.id ) AS users
            FROM tb_role r
            JOIN tb_user u ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
            WHERE r.id IN
            <foreach collection="array" open="(" separator="," close=")" item="one">
                #{one}
            </foreach>
            GROUP BY r.id
        ) temp
    </select>
    <delete id="deleteRoleByIds">
        delete from tb_role
        where id in
        <foreach collection="array" open="(" separator="," close=")" item="one">
            #{one}
        </foreach>
        and systemic=FALSE
    </delete>
</mapper>